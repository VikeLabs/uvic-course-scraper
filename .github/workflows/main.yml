name: uvic-course-scraper

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Cache npm dependencies
        uses: actions/cache@v1
        with:
          key: npm-${{ hashFiles('package-lock.json') }}
          path: ~/.npm
          restore-keys: |
            npm-

      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress

      - name: Lint
        run: npm run lint

  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Cache npm dependencies
        uses: actions/cache@v1
        with:
          key: npm-${{ hashFiles('package-lock.json') }}
          path: ~/.npm
          restore-keys: |
            npm-

      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress

      - name: Build
        run: npm run build

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Cache npm dependencies
        uses: actions/cache@v1
        with:
          key: npm-${{ hashFiles('package-lock.json') }}
          path: ~/.npm
          restore-keys: |
            npm-

      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress

      - name: Test
        run: npm test -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)